{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wylo\\\\wylo-post-website\\\\src\\\\components\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../redux/actions';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const validateForm = () => {\n    if (!title || !content) {\n      setError('Both title and content are required.');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const newPost = {\n        id: Date.now(),\n        title,\n        content\n      };\n      dispatch(addPost(newPost));\n      setSuccess('Post created successfully!');\n      setTimeout(() => {\n        setSuccess('');\n        navigate('/');\n      }, 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"create-post\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"O4PshcADMvZ/lPSmpes0t9mptAY=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useDispatch","addPost","useNavigate","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","content","setContent","error","setError","success","setSuccess","dispatch","navigate","validateForm","handleSubmit","e","preventDefault","newPost","id","Date","now","setTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Wylo/wylo-post-website/src/components/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPost } from '../redux/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles.css';\r\n\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    if (!title || !content) {\r\n      setError('Both title and content are required.');\r\n      return false;\r\n    }\r\n    setError('');\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      const newPost = {\r\n        id: Date.now(),\r\n        title,\r\n        content,\r\n      };\r\n      dispatch(addPost(newPost));\r\n      setSuccess('Post created successfully!');\r\n      setTimeout(() => {\r\n        setSuccess('');\r\n        navigate('/');\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='create-post-container'>\r\n    <form onSubmit={handleSubmit}>\r\n      <h1 className='create-post'>Create Post</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Content\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add Post</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}