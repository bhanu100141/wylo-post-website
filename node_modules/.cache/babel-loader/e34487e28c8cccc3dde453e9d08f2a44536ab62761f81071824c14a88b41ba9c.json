{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wylo\\\\wylo-post-website\\\\src\\\\components\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editPost } from '../redux/actions';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const post = useSelector(state => state.posts.find(p => p.id === parseInt(id)));\n  const [title, setTitle] = useState((post === null || post === void 0 ? void 0 : post.title) || '');\n  const [content, setContent] = useState((post === null || post === void 0 ? void 0 : post.content) || '');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!post) {\n      navigate('/');\n    }\n  }, [post, navigate]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title || !content) {\n      setError('Both title and content are required.');\n      return;\n    }\n    const updatedPost = {\n      id: parseInt(id),\n      title,\n      content\n    };\n    dispatch(editPost(parseInt(id), updatedPost));\n    setSuccess('Post updated successfully!');\n    setError('');\n    setTimeout(() => {\n      setSuccess('');\n      navigate('/');\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"jwMxKfTE7wA+2zSwfh1yjfxcStc=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","editPost","useNavigate","useParams","jsxDEV","_jsxDEV","EditPost","_s","id","post","state","posts","find","p","parseInt","title","setTitle","content","setContent","error","setError","success","setSuccess","dispatch","navigate","handleSubmit","e","preventDefault","updatedPost","setTimeout","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Wylo/wylo-post-website/src/components/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editPost } from '../redux/actions';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst EditPost = () => {\r\n  const { id } = useParams();\r\n  const post = useSelector((state) => state.posts.find((p) => p.id === parseInt(id)));\r\n  const [title, setTitle] = useState(post?.title || '');\r\n  const [content, setContent] = useState(post?.content || '');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!post) {\r\n      navigate('/');\r\n    }\r\n  }, [post, navigate]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content) {\r\n      setError('Both title and content are required.');\r\n      return;\r\n    }\r\n\r\n    const updatedPost = {\r\n      id: parseInt(id),\r\n      title,\r\n      content,\r\n    };\r\n\r\n    dispatch(editPost(parseInt(id), updatedPost));\r\n    setSuccess('Post updated successfully!');\r\n    setError('');\r\n\r\n    setTimeout(() => {\r\n      setSuccess('');\r\n      navigate('/');\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1>Edit Post</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Content\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Update Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}